{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["dotenv","config","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","event","update","text","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","Router","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e6c8416.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  \r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n\r\n    if (name === \"email\") setEmail(value);\r\n    else if (name === \"password\") setPassword(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create Account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // Log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fBase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport AuthForm from '../components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const { target: {name} } = e;\r\n    let provider;\r\n\r\n    if(name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(\"\");\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n\r\n    console.log(ok);\r\n    if(ok) {\r\n      // delete nweet\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); // 글 지우기\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 이미지 지우기\r\n    }\r\n  }\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet\r\n    });\r\n    setEditing(false);\r\n  }\r\n  const onChange = (event) => {\r\n    const { \r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  onChange={onChange}\r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"update nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fBase';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  \r\n\r\n  const onSubmit = async (e) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n   const onChange = (e) => {\r\n     const {\r\n       target: { value },\r\n     } = e;\r\n     setNweet(value);\r\n   };\r\n\r\n   const onFileChange = (event) => {\r\n     const {\r\n       target: { files },\r\n     } = event;\r\n     const theFile = files[0];\r\n     const reader = new FileReader();\r\n     reader.onloadend = (finishedEvent) => {\r\n       console.log(finishedEvent);\r\n       const {\r\n         currentTarget: { result },\r\n       } = finishedEvent;\r\n       setAttachment(result);\r\n     };\r\n     reader.readAsDataURL(theFile);\r\n   };\r\n   const onClearAttachment = () => {\r\n     setAttachment(\"\");\r\n   };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  \r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    // authService.currentUser.uid\r\n    history.push('/');\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n    .collection(\"nweets\")\r\n    .where(\"creatorId\", \"==\", userObj.uid)\r\n    .orderBy(\"createdAt\")\r\n    .get();\r\n\r\n    console.log(nweets.docs.map(doc => doc.data()));\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if(userObj.displayName !== newDisplayName) {\r\n     await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n      <>\r\n        <nav>\r\n          <ul\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\r\n          >\r\n            <li>\r\n              <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                  marginLeft: 10,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  fontSize: 12,\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                  {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navagation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj}) => {\r\n    \r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navagation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n\r\n","import React, { useEffect, useState } from \"react\";\nimport Router from 'components/Router';\nimport { authService } from 'fBase';\n\nconst App = (() => {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <div>\n      {\n        init \n        ? <Router refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} />\n        : \"Initializing...\"\n      }\n      {/* <footer>&copy; {new Date().getFullYear()} Nwiiter</footer> */}\n    </div>\n  );\n}) \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}